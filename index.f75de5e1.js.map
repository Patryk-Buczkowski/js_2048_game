{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nwindow.addEventListener('load', () => {\n  const buttonStart = document.querySelector('.button.start');\n  const table = document.querySelector('table tbody');\n  const scoreElem = document.querySelector('.game-score');\n  const messageStart = document.querySelector('.message-start');\n  const messageWin = document.querySelector('.message-win');\n  const messageLose = document.querySelector('.message-lose');\n  const boardSize = 4;\n\n  class Board {\n    constructor() {\n      this.board = [\n        [1024, 0, 0, 0],\n        [1024, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ];\n      this.score = 0;\n      this.start = false;\n    }\n\n    appendOneBox() {\n      if (!this.start) {\n        return;\n      }\n\n      if (this.occupiedPlaces().length < 16) {\n        const ShouldAdd4 = Math.random() < 0.1;\n        let xRandomIndex\n        = Math.floor(Math.random() * (this.board.length));\n        let yRandomIndex\n        = Math.floor(Math.random() * (this.board[0].length));\n\n        const occupiedPlaces = this.occupiedPlaces();\n\n        while (occupiedPlaces.some(\n          cell => cell.y === xRandomIndex && cell.x === yRandomIndex)) {\n          xRandomIndex\n          = Math.floor(Math.random() * (boardSize));\n\n          yRandomIndex\n          = Math.floor(Math.random() * (boardSize));\n        }\n\n        this.board[xRandomIndex][yRandomIndex] = ShouldAdd4 ? 4 : 2;\n\n        this.render();\n      }\n\n      if (this.occupiedPlaces().length === 16 && !this.availableMoves()) {\n        messageLose.classList.remove('hidden');\n      }\n    }\n\n    availableMoves() {\n      const move = this.occupiedPlaces().some(({ y, x }) => {\n        return this.getBoardField(y, x - 1) === this.getBoardField(y, x)\n        || this.getBoardField(y, x + 1) === this.getBoardField(y, x)\n        || this.getBoardField(y + 1, x) === this.getBoardField(y, x)\n        || this.getBoardField(y - 1, x) === this.getBoardField(y, x);\n      });\n\n      return move;\n    }\n\n    getBoardField(y, x) {\n      return (this.board[y] && this.board[y][x]) || null;\n    }\n\n    check2048() {\n      if (this.board.flat().some(elem => elem === 2048)) {\n        messageWin.classList.toggle('hidden');\n      }\n    }\n\n    updateScore(addedScore) {\n      this.score += addedScore;\n      scoreElem.textContent = this.score.toString();\n    }\n\n    occupiedPlaces() {\n      const occupiedPlaces = [];\n\n      for (let y = 0; y < boardSize; y++) {\n        for (let x = 0; x < this.board[y].length; x++) {\n          if (this.board[y][x] !== 0) {\n            occupiedPlaces.push({\n              'y': y,\n              'x': x,\n            });\n          }\n        }\n      }\n\n      return occupiedPlaces;\n    }\n\n    render() {\n      for (let y = 0; y < boardSize; y++) {\n        for (let x = 0; x < this.board[y].length; x++) {\n          const cell = this.board[y][x];\n\n          table.children[y].children[x].textContent = '';\n          table.children[y].children[x].className = 'field-cell';\n\n          if (cell !== 0) {\n            table.children[y].children[x].textContent = `${cell}`;\n            table.children[y].children[x].classList.add(`field-cell--${cell}`);\n          }\n        }\n      }\n    }\n\n    moveRight(col = boardSize - 1, row = 0, hasMerged = false) {\n      let merged = hasMerged;\n\n      if (row < boardSize) {\n        if (col > 0) {\n          const temp = this.board[row][col];\n          const nextValue = this.board[row][col - 1];\n          const isTheSameNumber = nextValue === temp && !merged;\n\n          if (nextValue !== 0 && (temp === 0 || isTheSameNumber)) {\n            this.board[row][col] = isTheSameNumber ? nextValue * 2 : nextValue;\n            this.board[row][col - 1] = 0;\n\n            if (isTheSameNumber) {\n              this.updateScore(nextValue * 2);\n              merged = true;\n            }\n\n            if (col < boardSize - 1) {\n              return this.moveRight(col + 1, row, merged);\n            }\n          }\n\n          return this.moveRight(col - 1, row);\n        } else {\n          return this.moveRight(boardSize - 1, row + 1);\n        }\n      }\n\n      this.appendOneBox();\n      this.occupiedPlaces();\n      this.check2048();\n    }\n\n    moveLeft(col = 0, row = 0, hasMerged = false) {\n      let merged = hasMerged;\n\n      if (row < boardSize) {\n        if (col < boardSize - 1) {\n          const temp = this.board[row][col];\n          const nextValue = this.board[row][col + 1];\n          const isTheSameNumber = nextValue === temp && !merged;\n\n          if (nextValue !== 0 && (temp === 0 || isTheSameNumber)) {\n            this.board[row][col] = isTheSameNumber ? nextValue * 2 : nextValue;\n            this.board[row][col + 1] = 0;\n\n            if (isTheSameNumber) {\n              this.updateScore(nextValue * 2);\n              merged = true;\n            }\n\n            if (col > 0) {\n              return this.moveLeft(col - 1, row, merged);\n            }\n          }\n\n          return this.moveLeft(col + 1, row);\n        } else {\n          return this.moveLeft(0, row + 1);\n        }\n      }\n\n      this.appendOneBox();\n      this.occupiedPlaces();\n      this.check2048();\n    }\n\n    moveUp(col = 0, row = 0, hasMerged = false) {\n      let merged = hasMerged;\n\n      if (col < boardSize) {\n        if (row < boardSize - 1) {\n          const temp = this.board[row][col];\n          const nextValue = this.board[row + 1][col];\n          const isTheSameNumber = nextValue === temp && !merged;\n\n          if (nextValue !== 0 && (temp === 0 || isTheSameNumber)) {\n            this.board[row][col] = isTheSameNumber ? nextValue * 2 : nextValue;\n            this.board[row + 1][col] = 0;\n\n            if (isTheSameNumber) {\n              this.updateScore(nextValue * 2);\n              merged = true;\n            }\n\n            if (row > 0) {\n              return this.moveUp(col, row - 1, merged);\n            }\n          }\n\n          return this.moveUp(col, row + 1);\n        } else {\n          return this.moveUp(col + 1, 0);\n        }\n      }\n\n      this.appendOneBox();\n      this.occupiedPlaces();\n      this.check2048();\n    }\n\n    moveDown(col = 0, row = boardSize - 1, hasMerged = false) {\n      let merged = hasMerged;\n\n      if (col < boardSize) {\n        if (row > 0) {\n          const temp = this.board[row][col];\n          const nextValue = this.board[row - 1][col];\n          const isTheSameNumber = nextValue === temp && !merged;\n\n          if (nextValue !== 0 && (temp === 0 || isTheSameNumber)) {\n            this.board[row][col] = isTheSameNumber ? nextValue * 2 : nextValue;\n            this.board[row - 1][col] = 0;\n\n            if (isTheSameNumber) {\n              this.updateScore(nextValue * 2);\n              merged = true;\n            }\n\n            if (row < boardSize - 1) {\n              return this.moveDown(col, row + 1, merged);\n            }\n          }\n\n          return this.moveDown(col, row - 1);\n        } else {\n          return this.moveDown(col + 1, boardSize - 1);\n        }\n      }\n\n      this.appendOneBox();\n      this.occupiedPlaces();\n      this.check2048();\n    }\n  }\n\n  const htmlBoard = new Board();\n  const arrowLeft = 'ArrowLeft';\n  const arrowRight = 'ArrowRight';\n  const arrowUp = 'ArrowUp';\n  const arrowDown = 'ArrowDown';\n\n  document.addEventListener('keydown', ev => {\n    switch (ev.key) {\n      case arrowLeft:\n        htmlBoard.moveLeft();\n        break;\n      case arrowRight:\n        htmlBoard.moveRight();\n        break;\n      case arrowUp:\n        ev.preventDefault();\n        htmlBoard.moveUp();\n        break;\n      case arrowDown:\n        ev.preventDefault();\n        htmlBoard.moveDown();\n        break;\n      default:\n        throw new Error('wrong button');\n    }\n  });\n  buttonStart.addEventListener('click', startToReset);\n\n  function startToReset() {\n    if (buttonStart.classList.contains('start')) {\n      htmlBoard.start = true;\n      htmlBoard.appendOneBox();\n      htmlBoard.appendOneBox();\n    }\n\n    buttonStart.classList.add('restart');\n    buttonStart.classList.remove('start');\n    messageStart.classList.add('hidden');\n\n    if (buttonStart.textContent === 'Restart') {\n      htmlBoard.board = [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ];\n\n      messageWin.classList.add('hidden');\n      messageLose.classList.add('hidden');\n      htmlBoard.appendOneBox();\n      htmlBoard.appendOneBox();\n      htmlBoard.score = 0;\n      scoreElem.textContent = '0';\n    }\n\n    buttonStart.textContent = 'Restart';\n  }\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}